name: gha action ci

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/ci.yaml
      - 'action-*/**' # By convention please name your actions action-<action-name>
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/ci.yaml
      - 'action-*/**' # By convention please name your actions action-<action-name>

jobs:
  update_tags:
    name: ci tests
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Get Target Branch Head
      run: |
        TARGET_BRANCH=$(git ls-remote origin target_branch | cut -f 1)
        echo "target_branch=${TARGET_BRANCH}" >> $GITHUB_ENV

    - name: Determine Changed Actions
      id: changed_actions
      run: |
        git diff --name-only '${{ env.target_branch }}' '${{ github.sha }}' \
          | awk -F '/' '{print $1}' \
          | uniq > ./changed_actions.txt

        CHANGED_ACTIONS=$(cat ./changed_actions.txt) && \
        echo "changed_actions=${CHANGED_ACTIONS}" >> $GITHUB_ENV

    - name: Verify Version Update and README.md Presence
      if: steps.changed_actions.outputs.changed_actions != ''
      run: |
        for action in ${{ env.changed_actions }}; do
          if git diff --quiet "$action/VERSION"; then
            echo "ERROR: $action/VERSION has not been updated."
            exit 1
          fi
          if [ ! -f "$action/README.md" ]; then
            echo "ERROR: $action/README.md not found."
            exit 1
          fi
          if [ ! -f "$action/action.yaml" ]; then
            echo "ERROR: $action/action.yaml does not exist."
            exit 1
          fi
        done

    - name: Update Tags
      if: steps.changed_actions.outputs.changed_actions != ''
      run: |
        for action in ${{ steps.changed_actions.outputs.changed_actions }}; do
          cd "$action"
          version=$(<VERSION)
          git tag -a "v$version" -m "Release $version"
          git push origin "v$version"
          cd ..
        done
