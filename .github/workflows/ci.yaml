name: java-platform
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  workflow_dispatch: {}
jobs:
  property-validation:
    env:
      pattern: '^REL\.[0-9]{4}-[0-9]{2}-[0-9]{2}_[0-9]{4}$'
    name: ci tests
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.6.0
        with:
          java-version: 8

      - name: Validate tealium.platform.limits.consumer property
        working-directory: all_modules
        run: |
          version=$(mvn help:evaluate \
            -Dexpression=tealium.platform.limits.consumer -q -DforceStdout)
          echo "VERSION: $version"
          echo $version | grep -Eq '${{ env.pattern }}'

name: Update Tags

on:
  push:
    paths:
      - 'action-*/**' # By convention please name your actions action-<action-name>

jobs:
  update_tags:
    name: ci tests
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Git
      run: |
        git config user.name "GitHub Actions"
        git config user.email "<>"

    - name: Determine Changed Actions
      id: changed_actions
      run: |
        CHANGED_ACTIONS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | awk -F '/' '{print $1}' | uniq)
        echo "::set-output name=changed_actions::${CHANGED_ACTIONS}"

    - name: Verify Version Update and README.md Presence
      if: steps.changed_actions.outputs.changed_actions != ''
      run: |
        for action in ${{ steps.changed_actions.outputs.changed_actions }}; do
          if git diff --quiet "$action/VERSION"; then
            echo "ERROR: $action/VERSION has not been updated."
            exit 1
          fi
          if [ ! -f "$action/README.md" ]; then
            echo "ERROR: $action/README.md not found."
            exit 1
          fi
        done

    - name: Update Tags
      if: steps.changed_actions.outputs.changed_actions != ''
      run: |
        for action in ${{ steps.changed_actions.outputs.changed_actions }}; do
          cd "$action"
          version=$(<VERSION)
          git tag -a "v$version" -m "Release $version"
          git push origin "v$version"
          cd ..
        done
